%Variables
PACKAGE_TYPE: 'RPM'
SEPKG_DIR:               '/usr/share/selinux/packages/auoms'
SEPOLICY_FILE_EL5:       '/usr/share/selinux/packages/auoms/auoms.el5.pp'
SEPOLICY_FILE_EL6:       '/usr/share/selinux/packages/auoms/auoms.el6.pp'
SEPOLICY_FILE:           '/usr/share/selinux/packages/auoms/auoms.pp'

%Files
${{SEPOLICY_FILE_EL5}};                       intermediate/${{BUILD_CONFIGURATION}}/selinux.el5/auoms.pp;             755; root; root
${{SEPOLICY_FILE_EL6}};                       intermediate/${{BUILD_CONFIGURATION}}/selinux.el6/auoms.pp;             755; root; root
${{SEPOLICY_FILE}};                           intermediate/${{BUILD_CONFIGURATION}}/selinux/auoms.pp;                 755; root; root
${{SEPKG_DIR}}/auoms.te;                      installer/selinux/auoms.te;                                             644; root; root
${{SEPKG_DIR}}/auoms.el5.te;                  installer/selinux/auoms.el5.te;                                         644; root; root
${{SEPKG_DIR}}/auoms.el6.te;                  installer/selinux/auoms.el6.te;                                         644; root; root
${{SEPKG_DIR}}/auoms.fc;                      installer/selinux/auoms.fc;                                             644; root; root

%Directories
/usr/share/selinux/packages;                  755; root; root; sysdir
/usr/share/selinux/packages/auoms;            755; root; root

%Dependencies
audit
audit-libs

%Postinstall_100
if [ -e /usr/sbin/semodule ]; then
    echo "System appears to have SELinux installed, attempting to install selinux policy module for auoms"

    DO_INSTALL=0
    DO_REMOVE=0
    MODULE_INSTALLED=0
    MODULE_VERSION=$(grep policy_module ${{SEPKG_DIR}}/auoms.te | sed 's/^policy_module(auoms,\([0-9][^)]*\));$/\1/')
    INSTALLED_VERSION=$(/usr/sbin/semodule -l | grep auoms | cut -f2)
    if [ -z "$INSTALLED_VERSION" ]; then
        DO_INSTALL=1
    elif [ "$INSTALLED_VERSION" != "$MODULE_VERSION" ]; then
        DO_REMOVE=1
        DO_INSTALL=1
    else
        echo "Latest selinux policy module for auoms is already installed"
        MODULE_INSTALLED=1
    fi

    if [ $DO_REMOVE -ne 0 ]; then
        echo "Removing older auoms selinux policy version $INSTALLED_VERSION"
        /usr/sbin/semodule -r auoms >/dev/null 2>&1
    fi

    if [ $DO_INSTALL -ne 0 ]; then
        echo "Installing auoms selinux policy version $MODULE_VERSION"
        for POLICY_FILE in ${{SEPOLICY_FILE}} ${{SEPOLICY_FILE_EL6}} ${{SEPOLICY_FILE_EL5}}; do
            echo "  Trying ${POLICY_FILE}"
            /usr/sbin/semodule -i ${POLICY_FILE} >/dev/null 2>&1
            if [ $? -eq 0 ]; then
                MODULE_INSTALLED=1
                break
            fi
        done
        if [ $MODULE_INSTALLED -eq 0 ]; then
            echo "ERROR: None of the available auoms selinux policy module files could be installed"
            exit 0
        fi
    fi
    if [ $MODULE_INSTALLED -eq 1 ]; then
        echo "Labeling auoms files"
        /sbin/restorecon -R -v /opt/microsoft/auoms/bin/auoms
    fi
fi
echo "Restarting auditd"
service auditd restart
sleep 3
# On CentOS/RHEL 7 the restart may fail to start auditd
# So, double check and start the service if restart failed
pgrep -x auditd >/dev/null 2>&1
if [ $? -ne 0 ]; then
    service auditd start
fi

%Preuninstall_100
if [ $1 -eq 0 ]; then
    if [ -e ${{AUOMS_AUDISP_CONF}} ]; then
        rm ${{AUOMS_AUDISP_CONF}}
    fi
    service auditd reload
    pgrep -f ${{AUOMS_BIN}} 2>&1 >/dev/null
    if [ $? -eq 0 ]; then
        pkill -KILL -f ${{AUOMS_BIN}}
    fi
fi

%Postuninstall_100
if [ $1 -eq 0 ]; then
    if [ -e /usr/sbin/semodule ]; then
        if [ ! -z "$(semodule -l | grep '^auoms\s*[0-9]')" ]; then
            echo "Removing selinux policy module for auoms"
            /usr/sbin/semodule -r auoms
            echo "Restarting auditd"
            sleep 3
            # On CentOS/RHEL 7 the restart may fail to start auditd
            # So, double check and start the service if restart failed
            pgrep -x auditd >/dev/null 2>&1
            if [ $? -ne 0 ]; then
                service auditd start
            fi
        fi
    fi

    rm -rf ${{AUOMS_ETC}}
    rm -rf ${{AUOMS_VAR}}
fi
